package kr.or.ddit.basic;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

import kr.or.ddit.util.DBUtil;

/*
 * - 회원을 관리하는 프로그램을 작성하시오.
 * 	(오라클 DB의 MYMEMBER 테이블 이용)
 * 
 * - 아래 메뉴의 기능을 모두 구현하시오. (CRUD 구현하기 연습)
 * 메뉴예시)
 * -- 작업 선택 --
 * 1. 자료 추가
 * 2. 자료 삭제
 * 3. 자료 수정
 * 4. 전체 자료 출력
 * 0. 작업 끝.
 * -------------
 * 작업 선택 >> 
 *  
 */
public class jdbcTest07 {
	Scanner sc = new Scanner(System.in);
	Connection conn = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	public static void main(String[] args) {
		new jdbcTest07().start();
	}
	private void start() {
		menu();
	}
	private void menu() {
		while(true){
			System.out.println("--작업 선택--");
			System.out.println("1. 자료 추가");
			System.out.println("2. 자료 삭제");
			System.out.println("3. 자료 수정");
			System.out.println("4. 전체 자료 출력");
			System.out.println("0. 작업 끝.");
			System.out.print("작업 선택 >> ");
			int choice = sc.nextInt();
			switch (choice) {
			case 1:	
				insert();
				break;
			case 2:
				delete();
				break;
			case 3:
				update();
				break;
			case 4:
				print();
				break;
			default:
				break;
			}
		}
	}
	private void print() {

	}
	private void update() {

	}
	private void delete() {

	}
	private void insert() {
		try {
			conn = DBUtil.getConnection();
			String id = "";
			int count = 0;
			do{
				System.out.print("아이디 입력 : ");
				id = sc.next();
				String sql = "select count(*) cnt from mymember where mem_id = ?";
				pstmt = conn.prepareStatement(sql);
				pstmt.setString(1, id);
				if(rs.next()){
					count = rs.getInt("cnt");
				}
				if(count == 1){
					System.out.println(id + "는 중복된 아이디입니다.");
				}
			}while(count ==1);
			
			System.out.print("이름 입력 : ");
			String name = sc.nextLine();
			System.out.print("전화번호 입력 : ");
			String tel = sc.nextLine();
			System.out.println("주소 입력 : ");
			String addr = sc.nextLine();
			
			conn = DBUtil.getConnection();
			String sql = "insert into mymember (mem_id, mem_name, mem_tel, mem_addr) values(?, ?, ?, ?)";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, id);
			pstmt.setString(2, name);
			pstmt.setString(3, tel);
			pstmt.setString(4, addr);

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			if(pstmt!=null) try{pstmt.close();}catch(SQLException e){}
			if(rs!=null) try{rs.close();}catch(SQLException e){}
			if(conn!=null) try{conn.close();}catch(SQLException e){}
		}
	}
}
